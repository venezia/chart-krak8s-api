apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-krak8s"
  labels:
    app: "{{ .Release.Name }}-krak8s"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{.Values.replicas}}
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-krak8s"
    spec:
      {{- if .Values.scheduling.affinity }}
      {{- if .Values.scheduling.affinity.node }}
      {{- if .Values.scheduling.affinity.node.labels }}
      affinity:
        nodeAffinity:
          {{ .Values.scheduling.affinity.node.type }}:
            nodeSelectorTerms:
            - matchExpressions:
                {{- range .Values.scheduling.affinity.node.labels }}
                - key: {{ .key }}
                  operator: {{ .operator }}
                  values:
                  {{- range .values }}
                  - {{ . }}
                  {{- end }}
                {{- end }}
      {{- end }}
      {{- end }}
      {{- end }}
      containers:
      - name: krak8s
        image: {{ .Values.krak8s.image }}:{{ .Values.krak8s.imageTag }}
        imagePullPolicy: {{ default "" .Values.krak8s.imagePullPolicy | quote }}
{{- if eq .Values.cloudProvider "aws" }}
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-aws-secret"
                key: id 
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-aws-secret"
                key: key
          - name: AWS_DEFAULT_REGION
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-aws-secret"
                key: region
{{- end }}
        ports:
        - name: api
          containerPort: 8080
        resources:
          requests:
            cpu: {{ .Values.krak8s.resources.requests.cpu | quote }}
            memory: {{ .Values.krak8s.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.krak8s.resources.limits.cpu | quote }}
            memory: {{ .Values.krak8s.resources.requests.memory | quote }}
        volumeMounts:
        - name: kraken-directory
          mountPath: /.kraken/
      - name: git-archivist
        image: {{ .Values.gitArchivist.image }}:{{ .Values.gitArchivist.imageTag }}
        imagePullPolicy: {{ default "" .Values.gitArchivist.imagePullPolicy | quote }}
        args: ["--v=2", "--logtostderr=true"]
        resources:
          requests:
            cpu: {{ .Values.gitArchivist.resources.requests.cpu | quote }}
            memory: {{ .Values.gitArchivist.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.gitArchivist.resources.limits.cpu | quote }}
            memory: {{ .Values.gitArchivist.resources.requests.memory | quote }}
        volumeMounts:
        - name: kraken-directory
          mountPath: /.kraken/
      imagePullSecrets:
      {{- if .Values.krak8s.imagePullSecret }}
        - name: "{{ .Release.Name }}-pull-secret"
      {{- end }}
      {{- if .Values.gitArchivist.imagePullSecret }}
        - name: "{{ .Release.Name }}-gitarchivist-pull-secret"
      {{- end }}
      serviceAccountName: "{{ .Release.Name }}-krak8s-serviceaccount"
      {{- if .Values.scheduling.tolerations }}
      tolerations:
      {{- range .Values.scheduling.tolerations }}
      - key: {{ .key }}
        value: {{ .value }}
        operator: Equal
        effect: {{ .effect }}
      {{- end }}
      {{- end }}
      volumes:
      - name: kraken-directory
        emptyDir: {}

